
    # Define the upstreams for the two Flask apps
    upstream employee_app {
        server 10.105.234.251:8080;  # employee app
    }

    upstream book_app {
        server 10.106.107.125:8081;  # book app
    }


    # Map directive to select the appropriate Flask app based on a custom header
    map $http_x_custom_header $flask_backend {
        "emp" employee_app; # Headers for both apps
        "bk" book_app;
        default book_app;  # Fallback to book_app if no match
    }

    server {
        listen 80;

        root /var/www/html;  # Directory where the default site and error pages are located
        index index.html;

        # Serve a custom 404 page
        error_page 404 /custom_404.html;

        # Serve a custom 500, 502, 503, 504 page
        error_page 500 502 503 504 /custom_50x.html;

        # Ensure the location block serves the error page
        location = /custom_404.html {
            root /var/www/html;  # Path to the custom error page
            internal;  # Prevent direct access to the error page by users
        }

        location = /custom_50x.html {
            root /var/www/html;
            internal;
        }

        # Enable access logging for this server
        access_log /var/log/nginx/flask_access.log;

        location / {
            # Use the mapped upstream to forward the request
            proxy_pass http://$flask_backend;

            # Set headers for Flask apps
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Other proxy settings
            proxy_redirect off;
        }

         # Optionally, set an error log for this server
          error_log /var/log/nginx/flask_error.log warn;
    }
